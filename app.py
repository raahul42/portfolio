# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13rAW7RzncUhdb6CXP-31qOLjakaOX6XI
"""

import streamlit as st
import pickle
import string
from nltk.corpus import stopwords
import nltk
from nltk.stem.porter import PorterStemmer


ps = PorterStemmer()


def transform_text(text):
    stop_words = set(stopwords.words('english'))
    text = text.lower()
    text = nltk.word_tokenize(text)

    y = []
    for i in text:
        if i.isalnum():
            if i not in stop_words and i not in string.punctuation and i != 'subject':
                y.append(ps.stem(i))

    return " ".join(y)


tfidf = pickle.load(open('vectorizer_k.pkl','rb'))
model = pickle.load(open('model_k.pkl','rb'))

st.title("Email Spam Classifier")

input_sms = st.text_area("Enter the message")


if st.button('Predict'):

    # 1. preprocess
    transformed_sms = transform_text(input_sms)
    # 2. vectorize
    vector_input = tfidf.transform([transformed_sms])
    # 3. predict
    # result = model.predict(vector_input)[0]
    result = model.predict_proba(vector_input)[0][1]
    # 4. Display

    # st.header(result)
    if result > 0.4:
        st.header("Spam "+ "with probability "+ str(round(result, 2)))
    else:
        st.header("Not Spam " + "with probability "+ str(1 - round(result , 2)))